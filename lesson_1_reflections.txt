1. diff is functional on version controls. However, one might want to make it easier.

First, it can only compare 2 files at once.
Second, it cannot add comments (to the changes).


Question 2: How could having easy access to the entire history of a file make you a more you a more efficient programmer in the long term?

1. you can see when you change it.
2. you can see the history evolution of changing it.
3. might come back to any point of history.

Question 3: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros. You are free to control when to commit and record the reason to commit.
Cons. You might forget to commit and keep editing for a quite long time. You also need to decide when to commit.

Question 4: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Answer. It is good to have commit to record the same pace of different files which are related. However, it is even better if one can edit/revise all the files at once.

Question  5: How can you use the commands git log and git diff to view the history of files?

Answer. You can check the names of the authors who made the commit and what has been changed, via commend "git log". For git diff, you can view the difference between any two commits: which files were changed, how many and which lines were changed.

Question 6: How might using version control make you more confident to make changes that could break something?

Answer. I could check back to each version and could come back to the current version as well without lose anything. What is more, I could find where the typos/errors from by comparing two adjacent files where lthe typos/errors started.


Question 7: Now that you have your workspace set up, what do you want to try using Git for?
Answer. Revise on my paper which need to submitted soon. I could feel free to make a revision on each small part and git push it and come back to reverse the process if I don't want. But might need lesson 2 for the different branches. But at least I know which part has been changed for some feature. However, one thing need to keep in mind, that I need to commit for each single feature revision. Otherwise, it will be difficult for me to revise it back.
